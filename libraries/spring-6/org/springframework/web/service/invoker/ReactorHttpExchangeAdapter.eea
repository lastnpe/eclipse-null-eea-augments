class org/springframework/web/service/invoker/ReactorHttpExchangeAdapter

exchangeForBodilessEntityMono
 (Lorg/springframework/web/service/invoker/HttpRequestValues;)Lreactor/core/publisher/Mono<Lorg/springframework/http/ResponseEntity<Ljava/lang/Void;>;>;
 (Lorg/springframework/web/service/invoker/HttpRequestValues;)Lreactor/core/publisher/Mono<Lorg/springframework/http/ResponseEntity<Ljava/lang/Void;>;>;
exchangeForBodyFlux
 <T:Ljava/lang/Object;>(Lorg/springframework/web/service/invoker/HttpRequestValues;Lorg/springframework/core/ParameterizedTypeReference<TT;>;)Lreactor/core/publisher/Flux<TT;>;
 <T:Ljava/lang/Object;>(Lorg/springframework/web/service/invoker/HttpRequestValues;Lorg/springframework/core/ParameterizedTypeReference<TT;>;)Lreactor/core/publisher/Flux<TT;>;
exchangeForBodyMono
 <T:Ljava/lang/Object;>(Lorg/springframework/web/service/invoker/HttpRequestValues;Lorg/springframework/core/ParameterizedTypeReference<TT;>;)Lreactor/core/publisher/Mono<TT;>;
 <T:Ljava/lang/Object;>(Lorg/springframework/web/service/invoker/HttpRequestValues;Lorg/springframework/core/ParameterizedTypeReference<TT;>;)Lreactor/core/publisher/Mono<TT;>;
exchangeForEntityFlux
 <T:Ljava/lang/Object;>(Lorg/springframework/web/service/invoker/HttpRequestValues;Lorg/springframework/core/ParameterizedTypeReference<TT;>;)Lreactor/core/publisher/Mono<Lorg/springframework/http/ResponseEntity<Lreactor/core/publisher/Flux<TT;>;>;>;
 <T:Ljava/lang/Object;>(Lorg/springframework/web/service/invoker/HttpRequestValues;Lorg/springframework/core/ParameterizedTypeReference<TT;>;)Lreactor/core/publisher/Mono<Lorg/springframework/http/ResponseEntity<Lreactor/core/publisher/Flux<TT;>;>;>;
exchangeForEntityMono
 <T:Ljava/lang/Object;>(Lorg/springframework/web/service/invoker/HttpRequestValues;Lorg/springframework/core/ParameterizedTypeReference<TT;>;)Lreactor/core/publisher/Mono<Lorg/springframework/http/ResponseEntity<TT;>;>;
 <T:Ljava/lang/Object;>(Lorg/springframework/web/service/invoker/HttpRequestValues;Lorg/springframework/core/ParameterizedTypeReference<TT;>;)Lreactor/core/publisher/Mono<Lorg/springframework/http/ResponseEntity<TT;>;>;
exchangeForHeadersMono
 (Lorg/springframework/web/service/invoker/HttpRequestValues;)Lreactor/core/publisher/Mono<Lorg/springframework/http/HttpHeaders;>;
 (Lorg/springframework/web/service/invoker/HttpRequestValues;)Lreactor/core/publisher/Mono<Lorg/springframework/http/HttpHeaders;>;
exchangeForMono
 (Lorg/springframework/web/service/invoker/HttpRequestValues;)Lreactor/core/publisher/Mono<Ljava/lang/Void;>;
 (Lorg/springframework/web/service/invoker/HttpRequestValues;)Lreactor/core/publisher/Mono<Ljava/lang/Void;>;
getBlockTimeout
 ()Ljava/time/Duration;
 ()L0java/time/Duration;
getReactiveAdapterRegistry
 ()Lorg/springframework/core/ReactiveAdapterRegistry;
 ()Lorg/springframework/core/ReactiveAdapterRegistry;
