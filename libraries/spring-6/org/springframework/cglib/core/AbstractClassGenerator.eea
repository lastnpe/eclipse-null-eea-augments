class org/springframework/cglib/core/AbstractClassGenerator
 <T:Ljava/lang/Object;>
 <T:Ljava/lang/Object;>

getCurrent
 ()Lorg/springframework/cglib/core/AbstractClassGenerator;
 ()Lorg/springframework/cglib/core/AbstractClassGenerator;

<init>
 (Lorg/springframework/cglib/core/AbstractClassGenerator$Source;)V
 (Lorg/springframework/cglib/core/AbstractClassGenerator$Source;)V
create
 (Ljava/lang/Object;)Ljava/lang/Object;
 (Ljava/lang/Object;)Ljava/lang/Object;
firstInstance
 (Ljava/lang/Class;)Ljava/lang/Object;
 (Ljava/lang/Class;)Ljava/lang/Object;
generate
 (Lorg/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData;)Ljava/lang/Class;
 (Lorg/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData;)Ljava/lang/Class;
getClassLoader
 ()Ljava/lang/ClassLoader;
 ()Ljava/lang/ClassLoader;
getClassName
 ()Ljava/lang/String;
 ()Ljava/lang/String;
getDefaultClassLoader
 ()Ljava/lang/ClassLoader;
 ()Ljava/lang/ClassLoader;
getNamingPolicy
 ()Lorg/springframework/cglib/core/NamingPolicy;
 ()Lorg/springframework/cglib/core/NamingPolicy;
getProtectionDomain
 ()Ljava/security/ProtectionDomain;
 ()Ljava/security/ProtectionDomain;
getStrategy
 ()Lorg/springframework/cglib/core/GeneratorStrategy;
 ()Lorg/springframework/cglib/core/GeneratorStrategy;
nextInstance
 (Ljava/lang/Object;)Ljava/lang/Object;
 (Ljava/lang/Object;)Ljava/lang/Object;
setClassLoader
 (Ljava/lang/ClassLoader;)V
 (Ljava/lang/ClassLoader;)V
setContextClass
 (Ljava/lang/Class;)V
 (Ljava/lang/Class;)V
setNamePrefix
 (Ljava/lang/String;)V
 (Ljava/lang/String;)V
setNamingPolicy
 (Lorg/springframework/cglib/core/NamingPolicy;)V
 (Lorg/springframework/cglib/core/NamingPolicy;)V
setStrategy
 (Lorg/springframework/cglib/core/GeneratorStrategy;)V
 (Lorg/springframework/cglib/core/GeneratorStrategy;)V
unwrapCachedValue
 (TT;)Ljava/lang/Object;
 (TT;)Ljava/lang/Object;
wrapCachedClass
 (Ljava/lang/Class;)TT;
 (Ljava/lang/Class;)TT;
