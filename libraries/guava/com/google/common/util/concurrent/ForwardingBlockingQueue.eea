class com/google/common/util/concurrent/ForwardingBlockingQueue
 <E:Ljava/lang/Object;>
 <E:Ljava/lang/Object;>

super com/google/common/collect/ForwardingQueue
 <TE;>
 <TE;>
super java/util/concurrent/BlockingQueue
 <TE;>
 <TE;>

delegate
 ()Ljava/util/concurrent/BlockingQueue<TE;>;
 ()Ljava/util/concurrent/BlockingQueue<TE;>;
drainTo
 (Ljava/util/Collection<-TE;>;)I
 (L1java/util/Collection<-TE;>;)I # @Inherited(java.util.concurrent.BlockingQueue)
drainTo
 (Ljava/util/Collection<-TE;>;I)I
 (L1java/util/Collection<-TE;>;I)I # @Inherited(java.util.concurrent.BlockingQueue)
offer
 (TE;JLjava/util/concurrent/TimeUnit;)Z
 (T1E;JL1java/util/concurrent/TimeUnit;)Z # @Inherited(java.util.concurrent.BlockingQueue)
poll
 (JLjava/util/concurrent/TimeUnit;)TE;
 (JL1java/util/concurrent/TimeUnit;)T0E; # @Inherited(java.util.concurrent.BlockingQueue)
put
 (TE;)V
 (T1E;)V # @Inherited(java.util.concurrent.BlockingQueue)
take
 ()TE;
 ()T1E; # @Inherited(java.util.concurrent.BlockingQueue)
