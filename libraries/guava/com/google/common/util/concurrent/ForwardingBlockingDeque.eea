class com/google/common/util/concurrent/ForwardingBlockingDeque
 <E:Ljava/lang/Object;>
 <E:Ljava/lang/Object;>

super com/google/common/collect/ForwardingDeque
 <TE;>
 <TE;>
super java/util/concurrent/BlockingDeque
 <TE;>
 <TE;>

delegate
 ()Ljava/util/concurrent/BlockingDeque<TE;>;
 ()Ljava/util/concurrent/BlockingDeque<TE;>;
drainTo
 (Ljava/util/Collection<-TE;>;)I
 (L1java/util/Collection<-TE;>;)I # @Inherited(java.util.concurrent.BlockingQueue)
drainTo
 (Ljava/util/Collection<-TE;>;I)I
 (L1java/util/Collection<-TE;>;I)I # @Inherited(java.util.concurrent.BlockingQueue)
offer
 (TE;JLjava/util/concurrent/TimeUnit;)Z
 (T1E;JL1java/util/concurrent/TimeUnit;)Z # @Inherited(java.util.concurrent.BlockingDeque)
offerFirst
 (TE;JLjava/util/concurrent/TimeUnit;)Z
 (T1E;JLjava/util/concurrent/TimeUnit;)Z # @Inherited(java.util.concurrent.BlockingDeque)
offerLast
 (TE;JLjava/util/concurrent/TimeUnit;)Z
 (T1E;JLjava/util/concurrent/TimeUnit;)Z # @Inherited(java.util.concurrent.BlockingDeque)
poll
 (JLjava/util/concurrent/TimeUnit;)TE;
 (JLjava/util/concurrent/TimeUnit;)T0E; # @Overrides(java.util.concurrent.BlockingDeque)
pollFirst
 (JLjava/util/concurrent/TimeUnit;)TE;
 (JLjava/util/concurrent/TimeUnit;)T0E; # @Overrides(java.util.concurrent.BlockingDeque)
pollLast
 (JLjava/util/concurrent/TimeUnit;)TE;
 (JLjava/util/concurrent/TimeUnit;)T0E; # @Overrides(java.util.concurrent.BlockingDeque)
put
 (TE;)V
 (T1E;)V # @Inherited(java.util.concurrent.BlockingDeque)
putFirst
 (TE;)V
 (T1E;)V # @Inherited(java.util.concurrent.BlockingDeque)
putLast
 (TE;)V
 (T1E;)V # @Inherited(java.util.concurrent.BlockingDeque)
take
 ()TE;
 ()T1E; # @Inherited(java.util.concurrent.BlockingDeque)
takeFirst
 ()TE;
 ()T1E; # @Inherited(java.util.concurrent.BlockingDeque)
takeLast
 ()TE;
 ()T1E; # @Inherited(java.util.concurrent.BlockingDeque)
