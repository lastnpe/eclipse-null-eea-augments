class com/google/common/collect/ForwardingMultimap
 <K:Ljava/lang/Object;V:Ljava/lang/Object;>
 <K:Ljava/lang/Object;V:Ljava/lang/Object;>

super com/google/common/collect/Multimap
 <TK;TV;>
 <TK;TV;>

asMap
 ()Ljava/util/Map<TK;Ljava/util/Collection<TV;>;>;
 ()Ljava/util/Map<TK;Ljava/util/Collection<TV;>;>;
containsEntry
 (Ljava/lang/Object;Ljava/lang/Object;)Z
 (Ljava/lang/Object;Ljava/lang/Object;)Z
containsKey
 (Ljava/lang/Object;)Z
 (Ljava/lang/Object;)Z
containsValue
 (Ljava/lang/Object;)Z
 (Ljava/lang/Object;)Z
delegate
 ()Lcom/google/common/collect/Multimap<TK;TV;>;
 ()Lcom/google/common/collect/Multimap<TK;TV;>;
entries
 ()Ljava/util/Collection<Ljava/util/Map$Entry<TK;TV;>;>;
 ()Ljava/util/Collection<Ljava/util/Map$Entry<TK;TV;>;>;
equals
 (Ljava/lang/Object;)Z
 (L0java/lang/Object;)Z # @Inherited(java.lang.Object)
get
 (TK;)Ljava/util/Collection<TV;>;
 (TK;)L1java/util/Collection<TV;>; # @Inherited(com.google.common.collect.Multimap)
keySet
 ()Ljava/util/Set<TK;>;
 ()L1java/util/Set<TK;>; # @Inherited(com.google.common.collect.Multimap)
keys
 ()Lcom/google/common/collect/Multiset<TK;>;
 ()Lcom/google/common/collect/Multiset<TK;>;
put
 (TK;TV;)Z
 (TK;TV;)Z
putAll
 (Lcom/google/common/collect/Multimap<+TK;+TV;>;)Z
 (Lcom/google/common/collect/Multimap<+TK;+TV;>;)Z
putAll
 (TK;Ljava/lang/Iterable<+TV;>;)Z
 (TK;Ljava/lang/Iterable<+TV;>;)Z
remove
 (Ljava/lang/Object;Ljava/lang/Object;)Z
 (Ljava/lang/Object;Ljava/lang/Object;)Z
removeAll
 (Ljava/lang/Object;)Ljava/util/Collection<TV;>;
 (Ljava/lang/Object;)Ljava/util/Collection<TV;>;
replaceValues
 (TK;Ljava/lang/Iterable<+TV;>;)Ljava/util/Collection<TV;>;
 (TK;Ljava/lang/Iterable<+TV;>;)Ljava/util/Collection<TV;>;
values
 ()Ljava/util/Collection<TV;>;
 ()L1java/util/Collection<TV;>; # @Inherited(com.google.common.collect.Multimap)
