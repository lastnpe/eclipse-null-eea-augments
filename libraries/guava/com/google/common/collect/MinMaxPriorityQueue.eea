class com/google/common/collect/MinMaxPriorityQueue
 <E:Ljava/lang/Object;>
 <E:Ljava/lang/Object;>

super java/util/AbstractQueue
 <TE;>
 <TE;>

create
 <E::Ljava/lang/Comparable<TE;>;>()Lcom/google/common/collect/MinMaxPriorityQueue<TE;>;
 <E::Ljava/lang/Comparable<TE;>;>()Lcom/google/common/collect/MinMaxPriorityQueue<TE;>;
create
 <E::Ljava/lang/Comparable<TE;>;>(Ljava/lang/Iterable<+TE;>;)Lcom/google/common/collect/MinMaxPriorityQueue<TE;>;
 <E::Ljava/lang/Comparable<TE;>;>(Ljava/lang/Iterable<+TE;>;)Lcom/google/common/collect/MinMaxPriorityQueue<TE;>;
expectedSize
 (I)Lcom/google/common/collect/MinMaxPriorityQueue$Builder<Ljava/lang/Comparable;>;
 (I)Lcom/google/common/collect/MinMaxPriorityQueue$Builder<Ljava/lang/Comparable;>;
maximumSize
 (I)Lcom/google/common/collect/MinMaxPriorityQueue$Builder<Ljava/lang/Comparable;>;
 (I)Lcom/google/common/collect/MinMaxPriorityQueue$Builder<Ljava/lang/Comparable;>;
orderedBy
 <B:Ljava/lang/Object;>(Ljava/util/Comparator<TB;>;)Lcom/google/common/collect/MinMaxPriorityQueue$Builder<TB;>;
 <B:Ljava/lang/Object;>(Ljava/util/Comparator<TB;>;)Lcom/google/common/collect/MinMaxPriorityQueue$Builder<TB;>;

add
 (TE;)Z
 (T1E;)Z # @Inherited(java.util.AbstractQueue)
addAll
 (Ljava/util/Collection<+TE;>;)Z
 (L1java/util/Collection<+TE;>;)Z # @Inherited(java.util.AbstractQueue)
comparator
 ()Ljava/util/Comparator<-TE;>;
 ()Ljava/util/Comparator<-TE;>;
iterator
 ()Ljava/util/Iterator<TE;>;
 ()L1java/util/Iterator<TE;>; # @Inherited(java.util.AbstractCollection)
offer
 (TE;)Z
 (T1E;)Z # @Inherited(java.util.Queue)
peek
 ()TE;
 ()T0E; # @Inherited(java.util.Queue)
peekFirst
 ()TE;
 ()T0E;
peekLast
 ()TE;
 ()T0E;
poll
 ()TE;
 ()T0E; # @Inherited(java.util.Queue)
pollFirst
 ()TE;
 ()T0E;
pollLast
 ()TE;
 ()T0E;
removeFirst
 ()TE;
 ()TE;
removeLast
 ()TE;
 ()TE;
toArray
 ()[Ljava/lang/Object;
 ()[1Ljava/lang/Object; # @Inherited(java.util.AbstractCollection)
