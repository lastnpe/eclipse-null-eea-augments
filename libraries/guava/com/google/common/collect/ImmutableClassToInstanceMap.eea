class com/google/common/collect/ImmutableClassToInstanceMap
 <B:Ljava/lang/Object;>
 <B:Ljava/lang/Object;>

super com/google/common/collect/ForwardingMap
 <Ljava/lang/Class<+TB;>;TB;>
 <Ljava/lang/Class<+TB;>;TB;>
super com/google/common/collect/ClassToInstanceMap
 <TB;>
 <TB;>

builder
 <B:Ljava/lang/Object;>()Lcom/google/common/collect/ImmutableClassToInstanceMap$Builder<TB;>;
 <B:Ljava/lang/Object;>()Lcom/google/common/collect/ImmutableClassToInstanceMap$Builder<TB;>;
copyOf
 <B:Ljava/lang/Object;S:TB;>(Ljava/util/Map<+Ljava/lang/Class<+TS;>;+TS;>;)Lcom/google/common/collect/ImmutableClassToInstanceMap<TB;>;
 <B:Ljava/lang/Object;S:TB;>(Ljava/util/Map<+Ljava/lang/Class<+TS;>;+TS;>;)Lcom/google/common/collect/ImmutableClassToInstanceMap<TB;>;
of
 <B:Ljava/lang/Object;>()Lcom/google/common/collect/ImmutableClassToInstanceMap<TB;>;
 <B:Ljava/lang/Object;>()Lcom/google/common/collect/ImmutableClassToInstanceMap<TB;>;
of
 <B:Ljava/lang/Object;T:TB;>(Ljava/lang/Class<TT;>;TT;)Lcom/google/common/collect/ImmutableClassToInstanceMap<TB;>;
 <B:Ljava/lang/Object;T:TB;>(Ljava/lang/Class<TT;>;TT;)Lcom/google/common/collect/ImmutableClassToInstanceMap<TB;>;

delegate
 ()Ljava/util/Map<Ljava/lang/Class<+TB;>;TB;>;
 ()Ljava/util/Map<Ljava/lang/Class<+TB;>;TB;>;
getInstance
 <T:TB;>(Ljava/lang/Class<TT;>;)TT;
 <T:TB;>(Ljava/lang/Class<TT;>;)T0T; # @Inherited(com.google.common.collect.ClassToInstanceMap)
putInstance
 <T:TB;>(Ljava/lang/Class<TT;>;TT;)TT;
 <T:TB;>(Ljava/lang/Class<TT;>;TT;)T0T; # @Inherited(com.google.common.collect.ClassToInstanceMap)
