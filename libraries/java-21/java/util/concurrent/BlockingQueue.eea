class java/util/concurrent/BlockingQueue
 <E:Ljava/lang/Object;>
 <E:Ljava/lang/Object;>

super java/util/Queue
 <TE;>
 <TE;>

add
 (TE;)Z
 (T1E;)Z # @Inherited(java.util.Queue)
contains
 (Ljava/lang/Object;)Z
 (L1java/lang/Object;)Z
drainTo
 (Ljava/util/Collection<-TE;>;)I
 (L1java/util/Collection<-TE;>;)I
drainTo
 (Ljava/util/Collection<-TE;>;I)I
 (L1java/util/Collection<-TE;>;I)I
offer
 (TE;)Z
 (T1E;)Z # @Inherited(java.util.Queue)
offer
 (TE;JLjava/util/concurrent/TimeUnit;)Z
 (T1E;JL1java/util/concurrent/TimeUnit;)Z
poll
 (JLjava/util/concurrent/TimeUnit;)TE;
 (JL1java/util/concurrent/TimeUnit;)T0E;
put
 (TE;)V
 (T1E;)V
remove
 (Ljava/lang/Object;)Z
 (L1java/lang/Object;)Z
take
 ()TE;
 ()T1E;
