class java/util/concurrent/BlockingDeque
 <E:Ljava/lang/Object;>
 <E:Ljava/lang/Object;>

super java/util/concurrent/BlockingQueue
 <TE;>
 <TE;>
super java/util/Deque
 <TE;>
 <TE;>

add
 (TE;)Z
 (T1E;)Z # @Inherited(java.util.concurrent.BlockingQueue)
addFirst
 (TE;)V
 (T1E;)V
addLast
 (TE;)V
 (T1E;)V
contains
 (Ljava/lang/Object;)Z
 (L1java/lang/Object;)Z # @Inherited(java.util.concurrent.BlockingQueue)
element
 ()TE;
 ()T1E; # @Inherited(java.util.Deque)
iterator
 ()Ljava/util/Iterator<TE;>;
 ()L1java/util/Iterator<TE;>; # @Inherited(java.util.Deque)
offer
 (TE;)Z
 (T1E;)Z # @Inherited(java.util.concurrent.BlockingQueue)
offer
 (TE;JLjava/util/concurrent/TimeUnit;)Z
 (T1E;JL1java/util/concurrent/TimeUnit;)Z # @Inherited(java.util.concurrent.BlockingQueue)
offerFirst
 (TE;)Z
 (T1E;)Z
offerFirst
 (TE;JLjava/util/concurrent/TimeUnit;)Z
 (T1E;JLjava/util/concurrent/TimeUnit;)Z
offerLast
 (TE;)Z
 (T1E;)Z
offerLast
 (TE;JLjava/util/concurrent/TimeUnit;)Z
 (T1E;JLjava/util/concurrent/TimeUnit;)Z
peek
 ()TE;
 ()T0E; # @Inherited(java.util.Deque)
poll
 ()TE;
 ()T0E; # @Inherited(java.util.Deque)
poll
 (JLjava/util/concurrent/TimeUnit;)TE;
 (JL1java/util/concurrent/TimeUnit;)T0E; # @Inherited(java.util.concurrent.BlockingQueue)
pollFirst
 (JLjava/util/concurrent/TimeUnit;)TE;
 (JL1java/util/concurrent/TimeUnit;)TE;
pollLast
 (JLjava/util/concurrent/TimeUnit;)TE;
 (JL1java/util/concurrent/TimeUnit;)TE;
push
 (TE;)V
 (T1E;)V
put
 (TE;)V
 (T1E;)V # @Inherited(java.util.concurrent.BlockingQueue)
putFirst
 (TE;)V
 (T1E;)V
putLast
 (TE;)V
 (T1E;)V
remove
 ()TE;
 ()T1E; # @Inherited(java.util.Deque)
remove
 (Ljava/lang/Object;)Z
 (L1java/lang/Object;)Z # @Inherited(java.util.concurrent.BlockingQueue)
removeFirstOccurrence
 (Ljava/lang/Object;)Z
 (L1java/lang/Object;)Z
removeLastOccurrence
 (Ljava/lang/Object;)Z
 (L1java/lang/Object;)Z
take
 ()TE;
 ()T1E; # @Inherited(java.util.concurrent.BlockingQueue)
takeFirst
 ()TE;
 ()T1E;
takeLast
 ()TE;
 ()T1E;
