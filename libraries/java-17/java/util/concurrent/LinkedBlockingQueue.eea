class java/util/concurrent/LinkedBlockingQueue
 <E:Ljava/lang/Object;>
 <E:Ljava/lang/Object;>

super java/util/AbstractQueue
 <TE;>
 <TE;>
super java/util/concurrent/BlockingQueue
 <TE;>
 <TE;>

<init>
 (Ljava/util/Collection<+TE;>;)V
 (Ljava/util/Collection<+TE;>;)V
contains
 (Ljava/lang/Object;)Z
 (L0java/lang/Object;)Z # @Overrides(java.util.concurrent.BlockingQueue)
drainTo
 (Ljava/util/Collection<-TE;>;)I
 (L1java/util/Collection<-TE;>;)I # @Inherited(java.util.concurrent.BlockingQueue)
drainTo
 (Ljava/util/Collection<-TE;>;I)I
 (L1java/util/Collection<-TE;>;I)I # @Inherited(java.util.concurrent.BlockingQueue)
forEach
 (Ljava/util/function/Consumer<-TE;>;)V
 (L1java/util/function/Consumer<-TE;>;)V
iterator
 ()Ljava/util/Iterator<TE;>;
 ()L1java/util/Iterator<TE;>; # @Inherited(java.util.AbstractCollection)
offer
 (TE;)Z
 (T1E;)Z # @Inherited(java.util.concurrent.BlockingQueue)
offer
 (TE;JLjava/util/concurrent/TimeUnit;)Z
 (T1E;JL1java/util/concurrent/TimeUnit;)Z # @Inherited(java.util.concurrent.BlockingQueue)
peek
 ()TE;
 ()T0E; # @Inherited(java.util.Queue)
poll
 ()TE;
 ()T0E; # @Inherited(java.util.Queue)
poll
 (JLjava/util/concurrent/TimeUnit;)TE;
 (JL1java/util/concurrent/TimeUnit;)T0E; # @Inherited(java.util.concurrent.BlockingQueue)
put
 (TE;)V
 (T1E;)V # @Inherited(java.util.concurrent.BlockingQueue)
remove
 (Ljava/lang/Object;)Z
 (L0java/lang/Object;)Z # @Overrides(java.util.concurrent.BlockingQueue)
removeAll
 (Ljava/util/Collection<*>;)Z
 (L1java/util/Collection<*>;)Z # @Inherited(java.util.AbstractCollection)
removeIf
 (Ljava/util/function/Predicate<-TE;>;)Z
 (L1java/util/function/Predicate<-TE;>;)Z # @Inherited(java.util.Collection)
retainAll
 (Ljava/util/Collection<*>;)Z
 (L1java/util/Collection<*>;)Z # @Inherited(java.util.AbstractCollection)
spliterator
 ()Ljava/util/Spliterator<TE;>;
 ()L1java/util/Spliterator<TE;>; # @Inherited(java.util.Collection)
take
 ()TE;
 ()T1E; # @Inherited(java.util.concurrent.BlockingQueue)
toArray
 ()[Ljava/lang/Object;
 ()[1L1java/lang/Object; # @Overrides(java.util.AbstractCollection)
toArray
 <T:Ljava/lang/Object;>([TT;)[TT;
 <T:Ljava/lang/Object;>([1TT;)[1TT; # @Inherited(java.util.AbstractCollection)
toString
 ()Ljava/lang/String;
 ()L1java/lang/String; # @Inherited(java.util.AbstractCollection)
