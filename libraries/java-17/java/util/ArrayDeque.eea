class java/util/ArrayDeque
 <E:Ljava/lang/Object;>
 <E:Ljava/lang/Object;>

super java/util/AbstractCollection
 <TE;>
 <TE;>
super java/util/Deque
 <TE;>
 <TE;>

<init>
 (Ljava/util/Collection<+TE;>;)V
 (Ljava/util/Collection<+TE;>;)V
add
 (TE;)Z
 (T1E;)Z # @Inherited(java.util.Deque)
addAll
 (Ljava/util/Collection<+TE;>;)Z
 (L1java/util/Collection<+TE;>;)Z # @Inherited(java.util.AbstractCollection)
addFirst
 (TE;)V
 (TE;)V
addLast
 (TE;)V
 (TE;)V
clone
 ()Ljava/util/ArrayDeque<TE;>;
 ()Ljava/util/ArrayDeque<TE;>;
contains
 (Ljava/lang/Object;)Z
 (Ljava/lang/Object;)Z
descendingIterator
 ()Ljava/util/Iterator<TE;>;
 ()Ljava/util/Iterator<TE;>;
element
 ()TE;
 ()T1E; # @Inherited(java.util.Deque)
forEach
 (Ljava/util/function/Consumer<-TE;>;)V
 (Ljava/util/function/Consumer<-TE;>;)V
getFirst
 ()TE;
 ()TE;
getLast
 ()TE;
 ()TE;
iterator
 ()Ljava/util/Iterator<TE;>;
 ()L1java/util/Iterator<TE;>; # @Inherited(java.util.AbstractCollection)
offer
 (TE;)Z
 (T1E;)Z # @Inherited(java.util.Deque)
offerFirst
 (TE;)Z
 (TE;)Z
offerLast
 (TE;)Z
 (TE;)Z
peek
 ()TE;
 ()T0E; # @Inherited(java.util.Deque)
peekFirst
 ()TE;
 ()TE;
peekLast
 ()TE;
 ()TE;
poll
 ()TE;
 ()T0E; # @Inherited(java.util.Deque)
pollFirst
 ()TE;
 ()TE;
pollLast
 ()TE;
 ()TE;
pop
 ()TE;
 ()TE;
push
 (TE;)V
 (TE;)V
remove
 ()TE;
 ()T1E; # @Inherited(java.util.Deque)
remove
 (Ljava/lang/Object;)Z
 (Ljava/lang/Object;)Z
removeAll
 (Ljava/util/Collection<*>;)Z
 (L1java/util/Collection<*>;)Z # @Inherited(java.util.AbstractCollection)
removeFirst
 ()TE;
 ()TE;
removeFirstOccurrence
 (Ljava/lang/Object;)Z
 (Ljava/lang/Object;)Z
removeIf
 (Ljava/util/function/Predicate<-TE;>;)Z
 (L1java/util/function/Predicate<-TE;>;)Z # @Inherited(java.util.Collection)
removeLast
 ()TE;
 ()TE;
removeLastOccurrence
 (Ljava/lang/Object;)Z
 (Ljava/lang/Object;)Z
retainAll
 (Ljava/util/Collection<*>;)Z
 (L1java/util/Collection<*>;)Z # @Inherited(java.util.AbstractCollection)
spliterator
 ()Ljava/util/Spliterator<TE;>;
 ()L1java/util/Spliterator<TE;>; # @Inherited(java.util.Collection)
toArray
 ()[Ljava/lang/Object;
 ()[1Ljava/lang/Object; # @Inherited(java.util.AbstractCollection)
toArray
 <T:Ljava/lang/Object;>([TT;)[TT;
 <T:Ljava/lang/Object;>([1TT;)[1TT; # @Inherited(java.util.AbstractCollection)
