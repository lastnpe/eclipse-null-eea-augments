class java/nio/CharBuffer

super java/lang/Comparable
 <Ljava/nio/CharBuffer;>
 <Ljava/nio/CharBuffer;>

allocate
 (I)Ljava/nio/CharBuffer;
 (I)L1java/nio/CharBuffer;
wrap
 (Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
 (L1java/lang/CharSequence;)L1java/nio/CharBuffer;
wrap
 (Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;
 (L1java/lang/CharSequence;II)L1java/nio/CharBuffer;
wrap
 ([C)Ljava/nio/CharBuffer;
 ([1C)L1java/nio/CharBuffer;
wrap
 ([CII)Ljava/nio/CharBuffer;
 ([1CII)L1java/nio/CharBuffer;

append
 (C)Ljava/nio/CharBuffer;
 (C)L1java/nio/CharBuffer;
append
 (Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
 (L0java/lang/CharSequence;)L1java/nio/CharBuffer;
append
 (Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;
 (L0java/lang/CharSequence;II)L1java/nio/CharBuffer;
array
 ()[C
 ()[1C
asReadOnlyBuffer
 ()Ljava/nio/CharBuffer;
 ()L1java/nio/CharBuffer;
chars
 ()Ljava/util/stream/IntStream;
 ()L1java/util/stream/IntStream; # @Inherited(java.lang.CharSequence)
clear
 ()Ljava/nio/CharBuffer;
 ()L1java/nio/CharBuffer;
compact
 ()Ljava/nio/CharBuffer;
 ()L1java/nio/CharBuffer;
compareTo
 (Ljava/nio/CharBuffer;)I
 (L1java/nio/CharBuffer;)I
duplicate
 ()Ljava/nio/CharBuffer;
 ()L1java/nio/CharBuffer;
equals
 (Ljava/lang/Object;)Z
 (L0java/lang/Object;)Z # @Inherited(java.lang.Object)
flip
 ()Ljava/nio/CharBuffer;
 ()L1java/nio/CharBuffer;
get
 (I[C)Ljava/nio/CharBuffer;
 (I[C)Ljava/nio/CharBuffer;
get
 (I[CII)Ljava/nio/CharBuffer;
 (I[CII)Ljava/nio/CharBuffer;
get
 ([C)Ljava/nio/CharBuffer;
 ([1C)L1java/nio/CharBuffer;
get
 ([CII)Ljava/nio/CharBuffer;
 ([1CII)L1java/nio/CharBuffer;
limit
 (I)Ljava/nio/CharBuffer;
 (I)L1java/nio/CharBuffer;
mark
 ()Ljava/nio/CharBuffer;
 ()L1java/nio/CharBuffer;
mismatch
 (Ljava/nio/CharBuffer;)I
 (L1java/nio/CharBuffer;)I
order
 ()Ljava/nio/ByteOrder;
 ()L1java/nio/ByteOrder;
position
 (I)Ljava/nio/CharBuffer;
 (I)L1java/nio/CharBuffer;
put
 (C)Ljava/nio/CharBuffer;
 (C)L1java/nio/CharBuffer;
put
 (IC)Ljava/nio/CharBuffer;
 (IC)L1java/nio/CharBuffer;
put
 (ILjava/nio/CharBuffer;II)Ljava/nio/CharBuffer;
 (ILjava/nio/CharBuffer;II)Ljava/nio/CharBuffer;
put
 (I[C)Ljava/nio/CharBuffer;
 (I[C)Ljava/nio/CharBuffer;
put
 (I[CII)Ljava/nio/CharBuffer;
 (I[CII)Ljava/nio/CharBuffer;
put
 (Ljava/lang/String;)Ljava/nio/CharBuffer;
 (L1java/lang/String;)L1java/nio/CharBuffer;
put
 (Ljava/lang/String;II)Ljava/nio/CharBuffer;
 (L1java/lang/String;II)L1java/nio/CharBuffer;
put
 (Ljava/nio/CharBuffer;)Ljava/nio/CharBuffer;
 (L1java/nio/CharBuffer;)L1java/nio/CharBuffer;
put
 ([C)Ljava/nio/CharBuffer;
 ([1C)L1java/nio/CharBuffer;
put
 ([CII)Ljava/nio/CharBuffer;
 ([1CII)L1java/nio/CharBuffer;
read
 (Ljava/nio/CharBuffer;)I
 (L1java/nio/CharBuffer;)I # @Inherited(java.lang.Readable)
reset
 ()Ljava/nio/CharBuffer;
 ()L1java/nio/CharBuffer;
rewind
 ()Ljava/nio/CharBuffer;
 ()L1java/nio/CharBuffer;
slice
 ()Ljava/nio/CharBuffer;
 ()L1java/nio/CharBuffer;
slice
 (II)Ljava/nio/CharBuffer;
 (II)Ljava/nio/CharBuffer;
subSequence
 (II)Ljava/nio/CharBuffer;
 (II)L1java/nio/CharBuffer;
toString
 ()Ljava/lang/String;
 ()L1java/lang/String; # @Inherited(java.lang.Object)
